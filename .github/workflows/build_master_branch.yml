name: Linux & Windows & Mac builds check on master branch push event

on:
  push:
    branches: [ "master" ]

permissions:
  issues: write
  pull-requests: write
  checks: write

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install packages
      run: sudo apt -y install git g++ cmake libsqlite3-dev gcovr libjpeg-dev valgrind lynx

    - name: Checkout aquamarine repo
      uses: actions/checkout@v3
      with:
        repository: MaksymT17/aquamarine
        ref: ${{ github.head_ref }}
        path: aquamarine

    - name: Build artifacts with Cmake
      run: |
        cd aquamarine &&
        ./build.sh

    - name: Run unit test
      run: |
        cd aquamarine/unit_tests &&
        ./prepare_build.sh &&
        cd build &&
        make -j8 &&
        ./aquamarine_ut --gtest_output="xml" &&
        cmake --build . --config Debug --target coverage_aquamarine_ut -- -j 4 &&
        lynx -dump ./coverage_aquamarine_ut/index.html

    - name: Publish Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        check_name: Unit test results
        files: "**/test_detail.xml"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: aquamarine_build_Linux
        path: aquamarine/build/

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Checkout aquamarine repo
        uses: actions/checkout@v3
        with:
          repository: MaksymT17/aquamarine
          ref: ${{ github.head_ref }}
          path: aquamarine

      - name: Build artifacts with Cmake
        run: |
          cd aquamarine &&
          echo "removing existing build folder..."
          rm -rf build/ &&
          mkdir build &&
          echo "preparing new build with cmake..." &&
          cd build/ &&
          cmake .. &&
          cmake --build . &&
          echo "Build complete!"
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aquamarine_build_Windows
          path: aquamarine/build/

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        brew install git gcc cmake sqlite3 gcovr jpeg

    - name: Checkout aquamarine repo
      uses: actions/checkout@v3
      with:
        repository: MaksymT17/aquamarine
        ref: ${{ github.head_ref }}
        path: aquamarine

    - name: Build artifacts with Cmake
      run: |
        cd aquamarine &&
        ./build.sh

    - name: Run unit test
      run: |
        cd aquamarine/unit_tests &&
        ./prepare_build.sh &&
        cd build &&
        make -j2 &&
        ./aquamarine_ut

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: aquamarine_build_MacOS
        path: aquamarine/build/